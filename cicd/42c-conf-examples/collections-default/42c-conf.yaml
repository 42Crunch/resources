# This example shows how to use the collection mode and default configuration.
#
# In collection mode, you can point the plugin to search for OpenAPI files in different directories in your 
# source code repository and to compile the discovered APIs into specific API collections with your pre-defined settings.
#
# The 'default' under 'audit' specifies that this is the default configuration that the plugin applies to any CI/CD run unless 
# it finds a more specific one# for a particular branch, tag, or PR.
#
# The plugin scans the directories specified in the configuration for OpenAPI files and 
# uploads them to API collections in 42Crunch Platform as specified by technical names under 'collections (here 'foo' and 'bar'). 
# If a particular API collection in the configuration does not exist in the platform, the plugin creates it.
# 
# The following required properties MUST be specified for each APi collection you want:
# - 'dir': The relative path to the directory that the plugin scans
#
# You can also define the following optional properties:
# - 'search': A list of glob patterns for file discovery (defaults to standard OpenAPI extensions).
# - 'teams': Sharing the API collection with particular teams in your organization, including the level of access (permissions) each team has to the collection. 
#            Keys under 'teams' must be names of existing teams in your organization (here 'TeamOne').
#            Permissions ('read', 'write', 'delete') are applied ONLY when a new API collection is created, not to already existing collections.
# - 'api_tags': List of tags to be applied to APIs in the API collection.
# - 'ignore_failures': If set to 'true', the plugin does not stop the CI/CD pipeline if the audit step fails. If set to 'false', the pipeline stops on failure.
# - 'collection_name': The (friendly) name for the API collection shown on the UI in addition to the technical name.
#
# The result from the configuration of the example below would be:
# - APIs found in the directory 'foo/' will be uploaded to the API collection called "foo", no other behavior options specified.
# - APIs found in the directory 'bar/' will be uploaded to the APi collection called "bar", failing the audit step does not stop the pipeline.

audit:
  default:
    collections:
      foo:
        dir: foo
        # teams: # Example teams, optional
        #   TeamOne:
        #     permissions:
        #       - read
      bar:
        dir: bar
        ignore_failures: true
        # search: # Example search, optional
        #   - '**/*.json'
        #   - '**/*.yaml'
